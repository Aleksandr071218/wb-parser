from clickhouse_connect import get_client

client = get_client(
    host='',        # üîÅ –ó–∞–º–µ–Ω–∏—Ç–µ, –µ—Å–ª–∏ –Ω–µ localhost
    port=0000,
    username='',      # üîÅ –í–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    password='',             # üîÅ –í–∞—à –ø–∞—Ä–æ–ª—å
    database=''
)

def parse_category_levels(category_raw: str):
    parts = category_raw.split('_')
    category = parts[-1]  # –ø–æ—Å–ª–µ–¥–Ω—è—è —á–∞—Å—Ç—å –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è

    # L1 = –ø–æ—Å–ª–µ–¥–Ω—è—è —á–∞—Å—Ç—å, L2 = –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—è—è –∏ —Ç.–¥.
    levels = [None, None, None, None]  # L1, L2, L3, L4

    # –ó–∞–ø–æ–ª–Ω—è–µ–º —É—Ä–æ–≤–Ω–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    for i, part in enumerate(reversed(parts)):
        if i < 4:
            levels[i] = part

    return category, levels

def insert_product_if_new(data: dict):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –∑–∞–ø–∞—Å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    article = data.get("article", "")
    product_url = data.get("link", "")
    category_raw = data.get("category", "")

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞—Ä—Ç–∏–∫—É–ª–∞ (–æ—Å–Ω–æ–≤–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä)
    if not article:
        print("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ—Ç –∞—Ä—Ç–∏–∫—É–ª–∞", data)
        return

    try:
        result = client.query(
            "SELECT count() FROM wildberries_products_parsed WHERE article = %(article)s",
            parameters={'article': article}
        )
        existing = result.result_rows[0][0] if result.result_rows else 0

        if existing > 0:
            print(f"‚è≠ –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {article}")
            return
    except Exception as check_e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è {article}: {check_e}")
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—Å—Ç–∞–≤–∫—É, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞—è)
    if category_raw:
        category, (category_l1, category_l2, category_l3, category_l4) = parse_category_levels(category_raw)
    else:
        category = ""
        category_l1 = ""
        category_l2 = ""
        category_l3 = ""
        category_l4 = ""

    # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã (8 —Å—Ç–æ–ª–±—Ü–æ–≤)
    insert_data = (
        article or "",           # article
        product_url or "",      # product_url
        category_raw or "",     # category_raw
        category or "",         # category
        category_l1 or "",      # category_l1
        category_l2 or "",      # category_l2
        category_l3 or "",      # category_l3
        category_l4 or ""       # category_l4
    )

    try:
        result = client.insert(
            table='wildberries_products_parsed',
            data=[insert_data],
            column_names=['article', 'product_url', 'category_raw', 'category', 'category_l1', 'category_l2', 'category_l3', 'category_l4']
        )
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {article}")
    except Exception as e:
        error_msg = str(e) if str(e) != '0' else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ ClickHouse'
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ —Ç–æ–≤–∞—Ä–∞ {article}: {error_msg}")
        print(f"üßæ –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        print(f"üßæ –î–∞–Ω–Ω—ã–µ: {insert_data}")
